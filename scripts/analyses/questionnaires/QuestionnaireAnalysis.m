% addpath('..\..\figures\');
% addpath('..\..\getData\');
% addpath('..\..\');
% [params] = GetParameters();
% load('E:\GitHub\analysis-VR\data\03. Experiment_Rep\PreprocessData_Questionnaires.mat');

%% Run the Friedman Anova

%% Control Questions

[results.visuomotor.control.owner.control] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 1, :))) ...
    );

[results.visuomotor.control.owner.action] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 2, :))) ...
    );

[results.visuomotor.control.owner.outcome] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 3, :))) ...
    );

[results.visuomotor.control.owner.both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 4, :))) ...
    );

fig7 = figure(7); clf
set(fig7, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.ownerCnt, 4, :)))'], ...
    'colors', 'k');

title('Visuomotor Information - Sense of ownership C');
ylim([0.5 7.5]);


[results.visuomotor.control.agency.control] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 1, :))) ...
    );

[results.visuomotor.control.agency.action] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 2, :))) ...
    );

[results.visuomotor.control.agency.outcome] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 3, :))) ...
    );

[results.visuomotor.control.agency.both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 4, :))) ...
    );


fig8 = figure(8); clf
set(fig8, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 4, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenActionCnt, 4, :)))'], ...
    'colors', 'k');

title('Visuomotor Information - Sense of ownership C');
ylim([0.5 7.5]);

[results.visuomotor.control.outcome.control] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 1, :))) ...
    );

[results.visuomotor.control.outcome.action] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 2, :))) ...
    );

[results.visuomotor.control.outcome.outcome] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 3, :))) ...
    );

[results.visuomotor.control.outcome.both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 4, :))) ...
    );

fig9 = figure(9); clf
set(fig9, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 4, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcomeCnt, 4, :)))'], ...
    'colors', 'k');

title('Visuomotor Information - Sense of ownership C');
ylim([0.5 7.5]);



[results.outcome_ownership.control.owner.control] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 1, :))) ...
    );

[results.outcome_ownership.control.owner.action] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 2, :))) ...
    );

[results.outcome_ownership.control.owner.outcome] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 3, :))) ...
    );

[results.outcome_ownership.control.owner.both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 4, :))) ...
    );

fig10 = figure(10); clf
set(fig10, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.ownerCnt, 4, :)))'], ...
    'colors', 'k');

title('Outcome ownership - sense of ownership');
ylim([0.5 7.5]);


[results.outcome_ownership.control.agency.control] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 1, :))) ...
    );

[results.outcome_ownership.control.agency.action] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 2, :))) ...
    );

[results.outcome_ownership.control.agency.outcome] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 3, :))) ...
    );

[results.outcome_ownership.control.agency.both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 4, :))) ...
    );


fig11 = figure(11); clf
set(fig11, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 4, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenActionCnt, 4, :)))'], ...
    'colors', 'k');

title('Outcome ownership - sense of ownership C' );
ylim([0.5 7.5]);


[results.outcome_ownership.control.outcome.control] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 1, :))) ...
    );

[results.outcome_ownership.control.outcome.action] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 2, :))) ...
    );

[results.outcome_ownership.control.outcome.outcome] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 3, :))) ...
    );

[results.outcome_ownership.control.outcome.both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 4, :))) ...
    );


fig12 = figure(12); clf
set(fig12, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 4, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcomeCnt, 4, :)))'], ...
    'colors', 'k');

title('Outcome ownership - sense of ownership C' );
ylim([0.5 7.5]);


%% Visuomotor Information, sense of ownership
[results.visuomotor.owner.control_actionNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :))) ...
    );

[results.visuomotor.owner.control_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :))) ...
    );

[results.visuomotor.owner.control_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :))) ...
    );

[results.visuomotor.owner.actionNoise_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :))) ...
    );

[results.visuomotor.owner.actionNoise_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :))) ...
    );

[results.visuomotor.owner.outcomeNoise_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :))) ...
    );

% plot this figure in a boxplot
fig1 = figure(1); clf
set(fig1, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :)))'], ...
    'colors', 'k');

title('Visuomotor Information - Sense of ownership');
ylim([0.5 7.5]);


%% Visuomotor Information, sense of agency (action)
[results.visuomotor.agenAction.control_actionNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 2, :))) ...
    );

[results.visuomotor.agenAction.control_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 3, :))) ...
    );

[results.visuomotor.agenAction.control_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 4, :))) ...
    );

[results.visuomotor.agenAction.actionNoise_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 3, :))) ...
    );

[results.visuomotor.agenAction.actionNoise_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 4, :))) ...
    );

[results.visuomotor.agenAction.outcomeNoise_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 4, :))) ...
    );


fig2 = figure(2); clf
set(fig2, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 4, :)))'], ...
    'colors', 'k');
title('Visuomotor Information - Sense of agency');
ylim([0.5 7.5]);


%% Visuomotor Information, sense of agency (outcome)
[results.visuomotor.agenOutcome.control_actionNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 2, :))) ...
    );

[results.visuomotor.agenOutcome.control_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 3, :))) ...
    );

[results.visuomotor.agenOutcome.control_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 4, :))) ...
    );

[results.visuomotor.agenOutcome.actionNoise_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 3, :))) ...
    );

[results.visuomotor.agenOutcome.actionNoise_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 4, :))) ...
    );

[results.visuomotor.agenOutcome.outcomeNoise_bothNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 4, :))) ...
    );

fig3 = figure(3); clf
set(fig3, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 4, :)))'], ...
    'colors', 'k');

title('Visuomotor Information - Outcome agency');
ylim([0.5 7.5]);


%% Outcome Ownership, sense of ownership
[results.outcome_ownership.owner.control_detachedHand] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :))) ...
    );

[results.outcome_ownership.owner.control_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :))) ...
    );

[results.outcome_ownership.owner.control_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :))) ...
    );

[results.outcome_ownership.owner.detachedHand_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :))) ...
    );

[results.outcome_ownership.owner.detachedHand_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :))) ...
    );

[results.outcome_ownership.owner.outcomeNoise_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :))) ...
    );


fig4 = figure(4); clf
set(fig4, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :)))'], ...
    'colors', 'k');

title('Outcome ownership - sense of ownership');
ylim([0.5 7.5]);



%% Outcome Ownership, sense of agency action
[results.outcome_ownership.agenAction.control_detachedHand] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 2, :))) ...
    );

[results.outcome_ownership.agenAction.control_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 3, :))) ...
    );

[results.outcome_ownership.agenAction.control_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 4, :))) ...
    );

[results.outcome_ownership.agenAction.detachedHand_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 3, :))) ...
    );

[results.outcome_ownership.agenAction.detachedHand_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 4, :))) ...
    );

[results.outcome_ownership.agenAction.outcomeNoise_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 4, :))) ...
    );



fig5 = figure(5); clf
set(fig5, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 4, :)))'], ...
    'colors', 'k');
title('Outcome Ownership - agency actions');
ylim([0.5 7.5]);



%% Outcome Ownership, sense of agency outcome
[results.outcome_ownership.agenOutcome.control_detachedHand] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 2, :))) ...
    );

[results.outcome_ownership.agenOutcome.control_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 3, :))) ...
    );

[results.outcome_ownership.agenOutcome.control_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 4, :))) ...
    );

[results.outcome_ownership.agenOutcome.detachedHand_outcomeNoise] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 3, :))) ...
    );

[results.outcome_ownership.agenOutcome.detachedHand_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 4, :))) ...
    );

[results.outcome_ownership.agenOutcome.outcomeNoise_both] = statisticsQuestionnaires (...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 4, :))) ...
    );


fig6 = figure(6); clf
set(fig6, 'units', 'centimeters', 'position', [5 5 10.0 15.0]);
hold on;

boxplot([...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 2, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 3, :)))', ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 4, :)))'], ...
    'colors', 'k');
title('Outcome Ownership - Agency Outcome');
ylim([0.5 7.5]);


%% Correlation between the differences

[results.correlations.aCIM] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 2, :))));

[results.correlations.aCIO] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 3, :))));

[results.correlations.aCIB] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenAction, 4, :))));


[results.correlations.oCIM] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 2, :))));

[results.correlations.oCIO] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 3, :))));

[results.correlations.oCIB] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.owner, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.visuomotorInformation.responses(params.quest.agenOutcome, 4, :))));




[results.correlations.zCIM] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 2, :))));

[results.correlations.zCIO] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 3, :))));

[results.correlations.zCIB] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenAction, 4, :))));


[results.correlations.xCIM] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 2, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 2, :))));

[results.correlations.xCIO] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 3, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 3, :))));

[results.correlations.xCIB] =  correlationDifference(...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.owner, 4, :))), ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 1, :))) - ...
    nanmean(squeeze(QuestionnaireData.outcomeOwnership.responses(params.quest.agenOutcome, 4, :))));


%% Save Variables
save('E:\Data\08. CB_VR_Outcome\Analysis_Results', 'results');

